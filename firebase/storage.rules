rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isImage() {
      return request.resource.contentType.matches('image/.*');
    }
    
    function isValidSize() {
      // Max 5MB for images
      return request.resource.size < 5 * 1024 * 1024;
    }
    
    // Profile pictures
    match /profile_pictures/{userId}/{fileName} {
      // Users can read any profile picture
      allow read: if isAuthenticated();
      
      // Users can only upload their own profile picture
      allow write: if isAuthenticated() && 
                      isOwner(userId) && 
                      isImage() && 
                      isValidSize();
      
      // Users can delete their own profile picture
      allow delete: if isAuthenticated() && isOwner(userId);
    }
    
    // Chat images (message attachments)
    match /chat_images/{userId}/{fileName} {
      // Anyone authenticated can read chat images
      allow read: if isAuthenticated();
      
      // Users can only upload to their own folder
      allow write: if isAuthenticated() && 
                      isOwner(userId) && 
                      isImage() && 
                      isValidSize();
      
      // Users can delete their own images
      allow delete: if isAuthenticated() && isOwner(userId);
    }
    
    // Deny all other access
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}

